---

- name: Create slurm REST API group
  ansible.builtin.group:
    name: "{{ __slurm_rest_group_name }}"
    gid: "{{ (slurm_rest_user | default({})).gid | default(omit) }}"
    system: "{{ (slurm_rest_user | default({})).system | default('yes') }}"
  when: __slurm_rest_group_name is defined
  become: true

- name: Create slurm REST API user
  ansible.builtin.user:
    name: "{{ __slurm_rest_user_name }}"
    comment: "{{ (slurm_rest_user | default({})).comment | default(omit) }}"
    uid: "{{ (slurm_rest_user | default({})).uid | default(omit) }}"
    group: "{{ __slurm_rest_group_name }}"
    groups: "{{ (slurm_rest_user | default({})).groups | default(omit) }}"
    home: "{{ (slurm_rest_user | default({})).home | default(omit) }}"
    shell: "{{ (slurm_rest_user | default({})).shell | default(omit) }}"
    system: "{{ (slurm_rest_user | default({})).system | default('yes') }}"
  become: true

- name: Install slurm REST API interface
  ansible.builtin.package:
    name: "{{ __slurm_packages.slurmrestd }}"
    state: "{{ 'latest' if slurm_upgrade else 'present' }}"
  become: true

# TODO: Verify if this would work on Debian/Ubuntu as well
- name: Set up systemd service file
  ansible.builtin.lineinfile:
    path: "/usr/lib/systemd/system/slurmrestd.service"
    regexp: "{{ item.regex }}"
    line: "{{ item.replace }}"
    backrefs: true
  notify:
    - Reload slurmrestd
    - Restart slurmrestd
  become: true
  loop: "{{ __slurm_redhat_restd_systemd_modifiers }}"
  when: __slurm_redhat

- name: Perform a daemon reload just to be safe
  ansible.builtin.systemd_service:
    daemon_reload: true
  become: true
  when: __slurm_redhat

- name: Create statesave directory
  ansible.builtin.file:
    path: "/var/spool/slurm/statesave"
    state: "directory"
    owner: "{{ __slurm_user_name }}"
    group: "{{ __slurm_group_name }}"
    mode: "0755"
  become: true

- name: Create unix socket location
  ansible.builtin.file:
    path: "{{ slurm_slurmrestd_sock_path | default('/var/lib/slurmrest') }}"
    state: "directory"
    owner: "{{ __slurm_rest_user_name }}"
    group: "{{ __slurm_rest_group_name }}"
    mode: "0755"
  become: true

- name: Create cryptographic key for JWT
  ansible.builtin.command:
    cmd: "dd if=/dev/random of=/var/spool/slurm/statesave/jwt_hs256.key bs=32 count=1"
    creates: "/var/spool/slurm/statesave/jwt_hs256.key"
  become: true
  notify: Restart slurmrestd

- name: Set reasonable permissions for the key
  ansible.builtin.file:
    path: "/var/spool/slurm/statesave/jwt_hs256.key"
    owner: "{{ __slurm_user_name }}"
    group: "{{ __slurm_group_name }}"
    mode: "0400"
  become: true
